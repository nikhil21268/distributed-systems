# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import mapReduce_pb2 as mapReduce__pb2


class MapReduceStub(object):
    """for master-mapper and master-reducer communication
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Map = channel.unary_unary(
                '/mapreduce.MapReduce/Map',
                request_serializer=mapReduce__pb2.MapRequest.SerializeToString,
                response_deserializer=mapReduce__pb2.MapResponse.FromString,
                )
        self.Reduce = channel.unary_unary(
                '/mapreduce.MapReduce/Reduce',
                request_serializer=mapReduce__pb2.ReduceRequest.SerializeToString,
                response_deserializer=mapReduce__pb2.ReduceResponse.FromString,
                )
        self.GetEntries = channel.unary_unary(
                '/mapreduce.MapReduce/GetEntries',
                request_serializer=mapReduce__pb2.GetEntriesRequest.SerializeToString,
                response_deserializer=mapReduce__pb2.GetEntriesResponse.FromString,
                )


class MapReduceServicer(object):
    """for master-mapper and master-reducer communication
    """

    def Map(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reduce(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MapReduceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Map': grpc.unary_unary_rpc_method_handler(
                    servicer.Map,
                    request_deserializer=mapReduce__pb2.MapRequest.FromString,
                    response_serializer=mapReduce__pb2.MapResponse.SerializeToString,
            ),
            'Reduce': grpc.unary_unary_rpc_method_handler(
                    servicer.Reduce,
                    request_deserializer=mapReduce__pb2.ReduceRequest.FromString,
                    response_serializer=mapReduce__pb2.ReduceResponse.SerializeToString,
            ),
            'GetEntries': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntries,
                    request_deserializer=mapReduce__pb2.GetEntriesRequest.FromString,
                    response_serializer=mapReduce__pb2.GetEntriesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mapreduce.MapReduce', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MapReduce(object):
    """for master-mapper and master-reducer communication
    """

    @staticmethod
    def Map(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mapreduce.MapReduce/Map',
            mapReduce__pb2.MapRequest.SerializeToString,
            mapReduce__pb2.MapResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reduce(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mapreduce.MapReduce/Reduce',
            mapReduce__pb2.ReduceRequest.SerializeToString,
            mapReduce__pb2.ReduceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEntries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mapreduce.MapReduce/GetEntries',
            mapReduce__pb2.GetEntriesRequest.SerializeToString,
            mapReduce__pb2.GetEntriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
